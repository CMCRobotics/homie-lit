name: CI/CD

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, develop ]

jobs:

  build-test-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
    
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'
        registry-url: 'https://npm.pkg.github.com'
        scope: '@bcopy'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run unit tests
      run: npm test

    - name: Start Mosquitto
      uses: namoshek/mosquitto-github-action@v1
      with:
        version: '1.6'
        ports: '1883:1883'
        container-name: 'mqtt'


    - name: Run integration tests
      run: npm run test:integration
      env:
        MQTT_BROKER_URL: mqtt://localhost:1883
    
    - name: Build
      run: npm run build

    - name: Get package name
      id: package-name
      run: echo "::set-output name=name::$(node -p "require('./package.json').name")"

    
    - name: Publish to GitHub Packages
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/'))
      run: |
        if [[ $GITHUB_REF == refs/heads/main ]]; then
          # Publishing from main branch
          npm dist-tag rm ${{ steps.package-name.outputs.name }} stable || true
          npm version --no-git-tag-version stable
          npm publish --tag stable
        elif [[ $GITHUB_REF == refs/heads/develop ]]; then
          # Publishing from develop branch
          npm dist-tag rm ${{ steps.package-name.outputs.name }} latest || true
          npm version --no-git-tag-version latest
          npm publish --tag latest
        elif [[ $GITHUB_REF == refs/tags/* ]]; then
          # Publishing from a tag
          VERSION=${GITHUB_REF#refs/tags/v}
          npm version --no-git-tag-version $VERSION
          npm publish --tag $VERSION
        fi
      env:
        NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

  create-release:
    needs: build-test-publish
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false