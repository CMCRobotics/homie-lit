import*as e from"lit";import*as t from"rxjs";import*as i from"mqtt";var s={d:(e,t)=>{for(var i in t)s.o(t,i)&&!s.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},o={};s.d(o,{NB:()=>n,zX:()=>m,rX:()=>g,O:()=>h,Rx:()=>H,oN:()=>b,eE:()=>p,Zk:()=>N,Ay:()=>k});class n{constructor(e){this.name=e,this.nodes=new Map}addNode(e){this.nodes.set(e.name,e)}removeNode(e){this.nodes.delete(e.name)}getNode(e){return this.nodes.get(e)}getAllNodes(){return Array.from(this.nodes.values())}}const r=(c={LitElement:()=>e.LitElement,css:()=>e.css,html:()=>e.html,render:()=>e.render},a={},s.d(a,c),a),d=(e,t)=>"method"===t.kind&&t.descriptor&&!("value"in t.descriptor)?{...t,finisher(i){i.createProperty(t.key,e)}}:{kind:"field",key:Symbol(),placement:"own",descriptor:{},originalKey:t.key,initializer(){"function"==typeof t.initializer&&(this[t.key]=t.initializer.call(this))},finisher(i){i.createProperty(t.key,e)}};var c,a,l;null===(l=window.HTMLSlotElement)||void 0===l||l.prototype.assignedElements;class p{constructor(){this.bindings=new Map}bindProperty(e,t,i){const s=`${e.name}-${i}`;this.bindings.set(s,t),this.updateElement(e,t,i)}updateElement(e,t,i){t.setAttribute(i,e.getValue().toString())}}class h extends HTMLElement{constructor(e){super(),this.node=e,this.bindingManager=new p}connectedCallback(){this.render()}render(){const e=r.html`
      <div class="homie-node">
        <h2>${this.node.name}</h2>
        ${this.node.getAllProperties().map((e=>r.html`
          <div class="property">
            <span>${e.name}: </span>
            <span>${e.getValue()}</span>
          </div>
        `))}
      </div>
    `;(0,r.render)(e,this),this.node.getAllProperties().forEach((e=>{const t=this.querySelector(`.property:has(span:contains('${e.name}'))`);t instanceof HTMLElement&&this.bindingManager.bindProperty(e,t,"data-value")}))}}customElements.define("homie-node",h);var v=function(e,t,i,s){var o,n=arguments.length,r=n<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,s);else for(var d=e.length-1;d>=0;d--)(o=e[d])&&(r=(n<3?o(r):n>3?o(t,i,r):o(t,i))||r);return n>3&&r&&Object.defineProperty(t,i,r),r};let m=class extends r.LitElement{render(){var e;return r.html`
      <div class="homie-device">
        ${null===(e=this.device)||void 0===e?void 0:e.getAllNodes().map((e=>r.html`
          <homie-node .node=${e}></homie-node>
        `))}
      </div>
    `}};var u,y;m.styles=r.css`
    :host {
      display: block;
      padding: 16px;
      max-width: 800px;
      margin: 0 auto;
    }
  `,v([(y={type:Object},(e,t)=>void 0!==t?((e,t,i)=>{t.constructor.createProperty(i,e)})(y,e,t):d(y,e)),function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}("design:type",n)],m.prototype,"device",void 0),m=v([(u="homie-device",e=>"function"==typeof e?((e,t)=>(customElements.define(e,t),t))(u,e):((e,t)=>{const{kind:i,elements:s}=t;return{kind:i,elements:s,finisher(t){customElements.define(e,t)}}})(u,e))],m);class g{constructor(e){this.name=e,this.properties=new Map}addProperty(e){this.properties.set(e.name,e)}getProperty(e){return this.properties.get(e)}getAllProperties(){return Array.from(this.properties.values())}}class b{constructor(e,t){this.name=e,this.value=t}setValue(e){this.value=e}getValue(){return this.value}}const f=(e=>{var t={};return s.d(t,e),t})({Subject:()=>t.Subject}),P=(e=>{var t={};return s.d(t,e),t})({default:()=>i.default});var E;!function(e){e.Device="device",e.Node="node",e.Property="property"}(E||(E={}));class x{constructor(e,t={},i){this.client=P.default.connect(e),this.homiePrefix=t.homiePrefix||"homie",this.messageCallback=i,this.client.on("connect",(()=>console.log("Connected to MQTT broker"))),this.client.on("message",((e,t)=>this.handleMessage(e,t)))}subscribe(e){const t=this.getSubscriptionTopic(e);this.client.subscribe(t)}getSubscriptionTopic(e){return e.startsWith(this.homiePrefix)?e:`${this.homiePrefix}/${e}`}handleMessage(e,t){const i=e.split("/");if(i[0]!==this.homiePrefix||i.length<3)return;const[,s,o,n]=i,r=t.toString();"$state"===o?this.handleDeviceState(s,r):void 0===n?this.handleNodeState(s,o,r):this.handlePropertyState(s,o,n,r)}handleDeviceState(e,t){const i={id:e,nodes:{}},s={type:E.Device,device:i};this.messageCallback(s)}handleNodeState(e,t,i){const s={id:e,nodes:{}},o={id:t,properties:{}},n={type:E.Node,device:s,node:o};this.messageCallback(n)}handlePropertyState(e,t,i,s){const o={id:e,nodes:{}},n={id:t,properties:{}},r={id:i,value:s},d={type:E.Property,device:o,node:n,property:r};this.messageCallback(d)}disconnect(){this.client&&!this.client.disconnected&&this.client.end()}}class H{constructor(e){this.messageHandler=e,this.devices={},this.onCreate=new f.Subject,this.onUpdate=new f.Subject,this.onDelete=new f.Subject,console.log("HomieObserver constructor called")}subscribe(e){this.messageHandler.subscribe(e)}get created$(){return this.onCreate.asObservable()}get updated$(){return this.onUpdate.asObservable()}get deleted$(){return this.onDelete.asObservable()}processEvent(e){switch(console.log("HomieObserver processing event:",e),e.type){case E.Device:this.processDeviceEvent(e);break;case E.Node:this.processNodeEvent(e);break;case E.Property:this.processPropertyEvent(e)}}processDeviceEvent(e){const{device:t}=e;this.devices[t.id]?this.onUpdate.next(e):(this.devices[t.id]=t,this.onCreate.next(e))}processNodeEvent(e){const{device:t,node:i}=e;this.devices[t.id]||(this.devices[t.id]=t,this.onCreate.next({type:E.Device,device:t})),this.devices[t.id].nodes[i.id]?this.onUpdate.next(e):(this.devices[t.id].nodes[i.id]=i,this.onCreate.next(e))}processPropertyEvent(e){console.log("Processing property event:",e);const{device:t,node:i,property:s}=e;this.devices[t.id]||(this.devices[t.id]=t,this.onCreate.next({type:E.Device,device:t}),console.log("Emitted create event",e)),this.devices[t.id].nodes[i.id]||(this.devices[t.id].nodes[i.id]=i,this.onCreate.next({type:E.Node,device:t,node:i}),console.log("Emitted create event",e));const o=this.devices[t.id].nodes[i.id].properties[s.id];o?o.value!==s.value&&(this.devices[t.id].nodes[i.id].properties[s.id]=s,this.onUpdate.next(e),console.log("Emitted update event",e)):(this.devices[t.id].nodes[i.id].properties[s.id]=s,this.onCreate.next(e),this.onUpdate.next(e),console.log("Emitted create and update events for new property",s.id))}}function N(e,t={}){let i;const s=new x(e,t,(e=>{i&&i.processEvent(e)}));return i=new H(s),i}const k={HomieDevice:n,HomieDeviceElement:m,HomieNode:g,HomieNodeComponent:h,HomieProperty:b,PropertyBindingManager:p,HomieObserver:H,createMqttHomieObserver:N};var O=o.NB,S=o.zX,w=o.rX,C=o.O,D=o.Rx,M=o.oN,$=o.eE,j=o.Zk,A=o.Ay;export{O as HomieDevice,S as HomieDeviceElement,w as HomieNode,C as HomieNodeComponent,D as HomieObserver,M as HomieProperty,$ as PropertyBindingManager,j as createMqttHomieObserver,A as default};